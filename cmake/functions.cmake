# Dependencies management
unset(planetary_imager_commons_DEPS CACHE)
unset(planetary_imager_backend_DEPS CACHE)
unset(planetary_imager_frontend_DEPS CACHE)

function(add_imager_dependencies)
  set(planetary_imager_commons_DEPS ${planetary_imager_commons_DEPS} ${ARGN} CACHE INTERNAL "planetary imager common deps" FORCE)
endfunction()

function(add_backend_dependencies)
  set(planetary_imager_backend_DEPS ${planetary_imager_backend_DEPS} ${ARGN} CACHE INTERNAL "planetary imager backend deps" FORCE)
endfunction()
function(add_frontend_dependencies)
  set(planetary_imager_frontend_DEPS ${planetary_imager_frontend_DEPS} ${ARGN} CACHE INTERNAL "planetary imager frontend deps" FORCE)
endfunction()

# Drivers defintion
set(enabled_drivers "" CACHE INTERNAL "" FORCE)
set(disabled_drivers "" CACHE INTERNAL "" FORCE)
set(unsupported_drivers "" CACHE INTERNAL "" FORCE)

function(add_driver)
  set(options DEFAULT_ON)
  set(oneValueArgs NAME)
  set(multiValueArgs SRCS LINK OS)
  cmake_parse_arguments(add_driver "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
  list(FIND add_driver_OS ${CMAKE_SYSTEM_NAME} OS_SUPPORTED)
  if(OS_SUPPORTED EQUAL -1)
    set(unsupported_drivers ${unsupported_drivers} ${add_driver_NAME} CACHE INTERNAL "")
    return()
  endif()
  option(BUILD_DRIVER_${add_driver_NAME} "Enable compilation of driver ${add_driver_NAME}" ${add_driver_DEFAULT_ON})
  if(NOT BUILD_DRIVER_${add_driver_NAME})
    set(disabled_drivers ${disabled_drivers} ${add_driver_NAME} CACHE INTERNAL "")
    return()
  endif()
  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/driver.json ${CMAKE_CURRENT_BINARY_DIR}/driver_${add_driver_NAME}.json)
  add_library(${add_driver_NAME} MODULE ${add_driver_SRCS})
  target_link_libraries(${add_driver_NAME} GuLinux_Qt_Commons GuLinux_c++_Commons drivers planetaryimager-commons ${add_driver_LINK} Qt5::Core Qt5::Qml ${OpenCV_LIBS})

  set_target_properties(${add_driver_NAME} PROPERTIES PREFIX "driver_")
  install(TARGETS ${add_driver_NAME} LIBRARY DESTINATION ${drivers_destination})
  install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${add_driver_NAME}.json DESTINATION ${drivers_destination})
  set(enabled_drivers ${enabled_drivers} ${add_driver_NAME} CACHE INTERNAL "")
endfunction()
