#!/bin/bash
set -e
. ${TRAVIS_BUILD_DIR}/git_commit_date.sh

if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
    docker run -v $TRAVIS_BUILD_DIR:/code -v $TRAVIS_BUILD_DIR/build:/build --entrypoint ${CMAKE_BINARY:-cmake} --name "planetary_imager_cmake" gulinux/planetaryimager_build:${DOCKER_IMAGE} \
        -DPACKAGE_VERSION_SUFFIX="_${GIT_COMMIT_DATE}_ci${TRAVIS_BUILD_NUMBER}" -DCMAKE_BUILD_TYPE=Debug -DENABLE_PLANETARYIMAGER_TESTING=On /code 
    if [ "$DOCKER_IMAGE_ARCHITECTURE" != "arm" ]; then
        docker run -v $TRAVIS_BUILD_DIR:/code -v $TRAVIS_BUILD_DIR/build:/build --entrypoint make --name "planetary_imager_build" gulinux/planetaryimager_build:${DOCKER_IMAGE} build_tests -j4
    fi
#    docker run -v $TRAVIS_BUILD_DIR:/code -v $TRAVIS_BUILD_DIR/build:/build --entrypoint make --name "planetary_imager_build" gulinux/planetaryimager_build:${DOCKER_IMAGE} -j4
fi

if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
    mkdir "$TRAVIS_BUILD_DIR/build"
    cd "$TRAVIS_BUILD_DIR/build"
    bash "$TRAVIS_BUILD_DIR/support/osx/cmake" -DBUILD_DRIVER_iidc=Off -DCPACK_GENERATOR=DragNDrop \
        -DPACKAGE_VERSION_SUFFIX="_${GIT_COMMIT_DATE}_ci${TRAVIS_BUILD_NUMBER}" -DCMAKE_BUILD_TYPE=RelWithDebInfo -DENABLE_PLANETARYIMAGER_TESTING=On \
        "$TRAVIS_BUILD_DIR"
    make -j4
fi

