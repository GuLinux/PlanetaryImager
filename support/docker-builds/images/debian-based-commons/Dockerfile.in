cp "$( dirname "$BASH_SOURCE")/configuration-${DEB_CONFIG_NAME}.cmake" "$PWD"
cat >"$PWD/debian-package-checker.sh" <<'EOF'
#!/bin/bash
PACKAGE="$1"

if ! [[ -r "$PACKAGE" ]]; then
    echo "Unable to find package to test: $PACKAGE" >&2
    exit 1
fi

echo "**** Testing installation for $PACKAGE"
apt install -y "./$PACKAGE"

EOF
chmod a+x debian-package-checker.sh

cat <<EOF
FROM ${DEB_BASE_IMAGE}
${PREPARATION_COMMAND}
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y \
    autoconf \
    qtbase5-dev \
    qtdeclarative5-dev \
    build-essential \
    cmake \
    libopencv-dev \
    libboost-all-dev \
    git \
    libudev-dev \
    libccfits-dev \
    && apt-get clean
EOF

. ../commons/Dockerfile.libusb.in
. ../commons/Dockerfile.workdir.in

cat <<EOF
COPY configuration-${DEB_CONFIG_NAME}.cmake /
COPY debian-package-checker.sh /usr/local/bin/
ENV CMAKE_EXTRA_OPTIONS -DCMAKE_INCLUDE_EXT_FILE=/configuration-${DEB_CONFIG_NAME}.cmake -DCPACK_GENERATOR=DEB ${CMAKE_EXTRA_OPTIONS}
ENV TEST_PACKAGE_CMD="/usr/local/bin/debian-package-checker.sh"
EOF
