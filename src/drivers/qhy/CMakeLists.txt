add_sdk(NAME QHY_Windows MAJOR 5 MINOR 0 PATCH 7 URL "http://www.qhyccd.com/file/repository/latestSoftAndDirver/SDK/V5.0.7/WINDOWS_qhyccd_V20190527_0.zip" HASH_ALGO MD5 HASH 342e063e31f662efe0d16448c7a4a696) 
add_sdk(NAME QHY_Linux_x86_64 MAJOR 5 MINOR 0 PATCH 7 URL "http://www.qhyccd.com/file/repository/latestSoftAndDirver/SDK/V5.0.7/LINUX_X64_qhyccd_V20190527_0.tgz" HASH_ALGO MD5 HASH b599eae3a4a017321df0a8ccfd19f812)
add_sdk(NAME QHY_Mac_x86_64 MAJOR 5 MINOR 0 PATCH 7 URL "http://www.qhyccd.com/file/repository/latestSoftAndDirver/SDK/V5.0.7/MACOS_X64_qhyccd_V20190527_0.tgz" HASH_ALGO MD5 HASH 7bed1c9171c7731ff1ccb8f7cda66c19)

if(CMAKE_SYSTEM_NAME STREQUAL Windows)
  set(QHY_INCLUDE_DIRECTORY ${QHY_Windows_SDK_DIR}/include)
  set(QHY_DLL_DIRECTORY ${QHY_Windows_SDK_DIR}/x64)
  set(QHY_LIBRARY ${QHY_DLL_DIRECTORY}/qhyccd.dll)
  # fix for windows case insensitive includes when cross compiled
  configure_file(${QHY_INCLUDE_DIRECTORY}/CyAPI.h ${CMAKE_CURRENT_BINARY_DIR}/qhy_includes/cyapi.h COPYONLY)
  configure_file(${QHY_INCLUDE_DIRECTORY}/CyUSB30_def.h ${CMAKE_CURRENT_BINARY_DIR}/qhy_includes/cyusb30_def.h COPYONLY)
  file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/qhy_includes/chatty.h "")
  set(QHY_INCLUDE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/qhy_includes ${QHY_INCLUDE_DIRECTORY})
elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin)
  set(QHY_INCLUDE_DIRECTORY ${QHY_Mac_x86_64_SDK_DIR}/usr/local/include)
  set(QHY_LIBS_DIRECTORY ${QHY_Mac_x86_64_SDK_DIR}/usr/local/lib)
  set(QHY_LIBRARY ${QHY_LIBS_DIRECTORY}/libqhyccd.a)
  set(QHY_EXTRA_LIBRARIES usb-1.0  "-framework CoreFoundation" "-framework IOKit" objc)
elseif(CMAKE_SYSTEM_NAME STREQUAL Linux)
  set(QHY_INCLUDE_DIRECTORY ${QHY_Linux_x86_64_SDK_DIR}/usr/local/include)
  set(QHY_LIBS_DIRECTORY ${QHY_Linux_x86_64_SDK_DIR}/usr/local/lib)
  set(QHY_LIBRARY ${QHY_LIBS_DIRECTORY}/libqhyccd.a)
  file(READ ${QHY_Linux_x86_64_SDK_DIR}/etc/udev/rules.d/85-qhyccd.rules QHY_UDEV_RULES)
  string(REPLACE "/sbin/fxload" "${CMAKE_INSTALL_PREFIX}/bin/fxload_planetaryimager" QHY_UDEV_RULES "${QHY_UDEV_RULES}")
  string(REPLACE "/lib/firmware/qhy" "/lib/firmware/qhy_planetaryimager" QHY_UDEV_RULES "${QHY_UDEV_RULES}")
  file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/qhyccd.rules" "${QHY_UDEV_RULES}")
endif()

include_directories(${QHY_INCLUDE_DIRECTORY})

execute_process(COMMAND ${CMAKE_SOURCE_DIR}/scripts/qhy_errors_to_map ${QHY_INCLUDE_DIRECTORY}/qhyccderr.h OUTPUT_VARIABLE qhy_error_codes)

set(qhy_SOURCES qhyccdimager.cpp qhydriver.cpp qhyimagingworker.cpp qhyexception.cpp qhycontrol.cpp)
add_driver(NAME qhy OS Linux Windows Darwin DEFAULT_ON SRCS ${qhy_SOURCES} ${qhy_GENERATED_SOURCES} LINK ${QHY_LIBRARY} ${QHY_EXTRA_LIBRARIES})

if(BUILD_DRIVER_qhy)
  if(CMAKE_SYSTEM_NAME STREQUAL Linux)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/qhyccd.rules DESTINATION ${UDEVRULES_INSTALL_DIR} RENAME 80-qhyccd_planetaryimager.rules)
    file(GLOB QHY_FIRMWARE_FILES ${QHY_Linux_x86_64_SDK_DIR}/lib/firmware/qhy/*)
    install(FILES ${QHY_FIRMWARE_FILES} DESTINATION ${FIRMWARE_INSTALL_BASEDIR}/qhy_planetaryimager)
    install(PROGRAMS ${QHY_Linux_x86_64_SDK_DIR}/sbin/fxload DESTINATION ${CMAKE_INSTALL_PREFIX}/bin RENAME fxload_planetaryimager)
  endif()
  if(CMAKE_SYSTEM_NAME STREQUAL Windows)
    file(GLOB QHY_WINDOWS_LIBRARIES ${QHY_DLL_DIRECTORY}/*.dll)
    install(FILES ${QHY_WINDOWS_LIBRARIES} DESTINATION .)
  endif()
endif()
